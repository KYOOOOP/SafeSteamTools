name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 0'

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: NPM Audit - Root
        run: npm audit --audit-level high
        continue-on-error: false

      - name: NPM Audit - Backend
        run: cd backend && npm audit --audit-level high
        continue-on-error: false

      - name: NPM Audit - Frontend
        run: cd frontend && npm audit --audit-level high
        continue-on-error: false

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

      - name: Upload Snyk results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: snyk.sarif
        continue-on-error: true

  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: ESLint Security Scan
        run: npm run lint

      - name: TypeScript Type Check
        run: npm run typecheck

      - name: Semgrep Security Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/nodejs
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        continue-on-error: true

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript
        continue-on-error: true

  malware-scan:
    name: Malware & Virus Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Build application
        run: npm run build

      - name: Install pkg for executable creation
        run: npm install -g pkg

      - name: Create Windows executable
        run: |
          cd backend
          pkg package.json --targets node18-win-x64 --output ../dist/SafeSteamTools.exe

      - name: Install ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon
          sudo systemctl stop clamav-freshclam
          sudo freshclam
          sudo systemctl start clamav-freshclam

      - name: Scan executable with ClamAV
        run: |
          clamscan --infected --remove=no dist/SafeSteamTools.exe
          clamscan --recursive --infected dist/

      - name: Upload executable for VirusTotal scan
        uses: crazy-max/ghaction-virustotal@v4
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            dist/SafeSteamTools.exe
        continue-on-error: true

      - name: Store scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-scan-results
          path: |
            dist/
            *.json
            *.sarif
          retention-days: 30

  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker images
        run: docker-compose build

      - name: Run Trivy vulnerability scanner - Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'safesteamtools_backend:latest'
          format: 'sarif'
          output: 'backend-trivy-results.sarif'

      - name: Run Trivy vulnerability scanner - Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'safesteamtools_frontend:latest'
          format: 'sarif'
          output: 'frontend-trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'backend-trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'frontend-trivy-results.sarif'

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, static-analysis, malware-scan, container-security]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Generate security report
        run: |
          chmod +x scripts/generate-security-report.sh
          ./scripts/generate-security-report.sh > SECURITY_REPORT.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: SECURITY_REPORT.md
          retention-days: 30

      - name: Comment PR with security status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('SECURITY_REPORT.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## üõ°Ô∏è Security Scan Results\n\n' + report.substring(0, 60000)
            });

  security-gate:
    name: Security Gate
    runs-on: ubuntu-latest
    needs: [dependency-scan, static-analysis, malware-scan, container-security]
    steps:
      - name: Check all security jobs passed
        run: |
          echo "All security checks completed"
          if [ "${{ needs.dependency-scan.result }}" != "success" ]; then
            echo "Dependency scan failed!"
            exit 1
          fi
          if [ "${{ needs.static-analysis.result }}" != "success" ]; then
            echo "Static analysis failed!"
            exit 1
          fi
          if [ "${{ needs.malware-scan.result }}" != "success" ]; then
            echo "Malware scan failed!"
            exit 1
          fi
          echo "üõ°Ô∏è All security checks passed!"